@startuml 

title Food Delivery Application\nClass Diagram

RestaurantList --|> Restaurant
Restaurant --|> Menu
Payment -right- Reciept
User "1" *-right- "0..*" Order
Order "1" *-- "0..*" Payment
User "1" *-left- "0..*" Cart
/'enums'/
Restaurant -up-> PopularityRating
Restaurant -left-> RegisrationStatus
Restaurant -down-> IsNonVeg
Payment --|> PaymentType
Reciept --|> PaymentType
Notification -down-|> NotificationType
Order -up-> OrderStatus

class User {
    UserID : Integer
    method()
}

class RestaurantList {
    RestaurantListID : Integer
    RestaurantList : Restaurant[]
    getRestaurantList()
    FilterList()
}

class Restaurant {
    RestaurantID : Integer
    OwnerID : Integer
    Location : String
    IsNonVeg : Bool
    Rating : Integer
    Popularity : PopularityRating
    Registration : RegisrationStatus
    GetDeliveryTime() : Datetime
    GetMenu(RestaurantID) : Menu
}

enum PopularityRating {
    1 Star
    2 Star
    3 Star
    4 Star
    5 Star
}

enum RegisrationStatus {
    New 
    Accepted
    Rejected
}

Enum IsNonVeg {
    true
    false
}


class Menu {
    MenuID : Integer
    RestaurantID : Integer
    CreateCart(UserID)
    GetMenu(RestaurantID)
    AddItemToCart(ItemID)
}

class Cart {
    CartID : Integer
    UserID : Integer
    RestaurantID : Integer
    CartInstructions : String
    CartItems : Item[]
    CalculateSubTotal(CartItems) : Double
    CreateOrder(Cart)
}

class Order {
    OrderID : Integer
    UserID : Integer
    RestaurantID : Integer
    OrderItems : CartItems
    OrderStatus : OrderStatus
    ValidateDiscount()
    ApplyDiscount()
    CalculateTax()
    CalculateDeliveryFee()
    CalculateTotal(OrderItems,CalculateTax(),ApplyDiscount())
}

enum OrderStatus {
   created 
   received 
   declined
   accepted 
   in progress
   shipped
   delivered
}

class Payment {
    PaymentID : Integer
    UserID : Integer
    RestaurantID : Integer
    OrderID : Integer
    PaymentType : PaymentType
    Total : Double
    SubTotal : Double
    Tax : Double
    DeliveryFee : Double
    SubmitPayment()
    InitiateOrder(OrderID)
    GetOrders(UserID)
}

enum PaymentType {
    Card 
    Wallet
    C.O.D.
}

class Reciept {
    RecieptID : Integer
    PaymentID : Integer
    UserID : Integer
    RestaurantID : Integer
    OrderID : Integer
    PaymentType : PaymentType
    Total : Double
    SubTotal : Double
    Tax : Double
    DeliveryFee : Double
}

class Notification {
    NotificationID : Integer
    NotificationType : NotificationType
    SendNotification()
}

enum NotificationType {
    Registration
    Order Status 
    Payment Status 
}

@enduml 